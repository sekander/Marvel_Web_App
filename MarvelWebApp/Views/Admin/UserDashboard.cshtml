@{
    ViewData["Title"] = "User Dashboard";
}

<h1>User Dashboard</h1>

<div>
    <h2>Search Comics</h2>
    <input type="text" id="searchTitle" placeholder="Enter comic title" />
    <button id="searchComicsBtn">Search</button>
    <div id="searchResults"></div>
</div>

<div>
    <h2>Shopping Cart</h2>
    <button id="viewCartBtn">View Cart</button>
    <div id="cartItems"></div>
</div>

<div>
    <h2>Checkout</h2>
    <button id="checkoutBtn">Checkout</button>
</div>

<form method="post" action="/Manager/Logout" class="mt-3">
    @Html.AntiForgeryToken()  <!-- This token is required for security -->
    <button type="submit" class="btn btn-danger">Logout</button>
</form>

<script>
    const apiBaseUrl = "/api/user";


    // Search comics
    document.getElementById("searchComicsBtn").addEventListener("click", async () => {
        const title = document.getElementById("searchTitle").value;
        const response = await fetch(`${apiBaseUrl}/comics/search?title=${title}`);
        const results = await response.json();
        const searchResults = document.getElementById("searchResults");

            searchResults.innerHTML = ''; // Clear previous search results

        if (response.ok) {
            // Create a grid container for comic cards
            const comicsGrid = document.createElement("div");
            comicsGrid.classList.add("comics-grid");

            // Loop through the search results and create a card for each comic
            for (let i = 0; i < results.length; i++) {
                const comic = results[i];

                // Create a card div for each comic
                const card = document.createElement("div");
                card.classList.add("comic-card");

                // Set up the card content (image, title, price, quantity input, add to cart button)
                card.innerHTML = `
                    <img src="${comic.imageUrl}" alt="${comic.title}" class="comic-image">
                    <h3>${comic.title}</h3>
                    <p>Price: $${comic.price}</p>
                    <input type="number" id="quantity-${comic.comicID}" value="1" min="1">
                    <button class="add-to-cart-btn" data-comic-id="${comic.comicID}">Add to Cart</button>
                `;

                // Append the card to the comics grid
                comicsGrid.appendChild(card);

                // Add event listener for the "Add to Cart" button
                const addToCartBtn = card.querySelector(".add-to-cart-btn");
                addToCartBtn.addEventListener("click", async () => {
                    const comicId = addToCartBtn.getAttribute("data-comic-id");
                    const quantity = document.getElementById(`quantity-${comicId}`).value;
                    await addToCart(comicId, quantity);
                });
            }

            // Add the comics grid to the search results container
            searchResults.appendChild(comicsGrid);
        } else {
            searchResults.innerHTML = `<p>${results.message}</p>`;
        }
    });

   // Function to add a comic to the shopping cart
    async function addToCart(comicId, quantity) {
        try {
            const response = await fetch(`${apiBaseUrl}/shopping-cart/add?comicId=${comicId}&quantity=${quantity}`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    // Add other headers if needed (such as Authorization)
                },
            });

            // Handle the response
            const result = await response.json();

            if (response.ok) {
                alert(result.message); // Comic added successfully
            } else {
                alert(`Error: ${result.message}`); // Handle errors (e.g., Comic not found)
            }
        } catch (error) {
            console.error("Error adding comic to cart:", error);
            alert("An error occurred while adding the comic to the cart.");
        }
    }


    // View shopping cart
    document.getElementById("viewCartBtn").addEventListener("click", async () => {
        const response = await fetch(`${apiBaseUrl}/shopping-cart`);
        const cartItems = await response.json();
        const cartItemsDiv = document.getElementById("cartItems");
        if (cartItems.length > 0) {
            cartItemsDiv.innerHTML = cartItems.map(i => `<p>${i.comicTitle} - Quantity: ${i.quantity}</p>`).join("");
        } else {
            cartItemsDiv.innerHTML = "<p>Your cart is empty.</p>";
        }
    });

    // Checkout
    document.getElementById("checkoutBtn").addEventListener("click", async () => {
        const response = await fetch(`${apiBaseUrl}/purchase`, { method: "POST" });
        const result = await response.json();
        alert(result.message);
    });
</script>