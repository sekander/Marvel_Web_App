@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
    ViewData["Title"] = "User Dashboard";
}
<section class="row mt-5 mb-5">
<div class="col-left">
        <div class="mask-group-wrapper">
           
            <img class="mask-group-icon" alt="" src="~/ManagerProfile.jpg">

        </div>
        <br>
        
        <div class="title">USER</div>
        <br><br>
        <a href="#">
            <div class="task">View Cart</div>
        </a>
        <a href="#">
            <div class="task">Collection</div>
        </a>

   

</div>
<div class="col-right">
<h1>User Dashboard</h1>

<div>
    <h2>Search Comics</h2>
    <div class="d-flex flex-row gap-2"><input type="text" id="searchTitle" placeholder="Enter comic title" />
                <button id="searchComicsBtn">Search<i class="fa-solid fa-magnifying-glass pt-1 "></i></button>
            </div>
    <div id="searchResults" class="row mt-3"></div>
</div>

<div class="mt-4">
    <h2>Shopping Cart</h2>
            <button id="viewCartBtn">View Cart<i class="fa-solid fa-cart-shopping p-1"></i></button>
    <div id="cartItems" class="mt-2"></div>
</div>

<div class="mt-4">
    <h2>Checkout</h2>
            <button id="checkoutBtn">Checkout<i class="fa-regular fa-credit-card p-1"></i></button>
</div>



<!-- âœ… Modal for comic details -->
<div class="modal fade  " id="comicModal" tabindex="-1" aria-labelledby="comicModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
                <div class="modal-content bg-dark bg-opacity-75 text-white">
            <div class="modal-header">
                <h5 class="modal-title" id="comicModalLabel">Comic Details</h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
                    <div class="modal-body row p-3" id="comicModalBody">
                <!-- Details will be filled dynamically -->
            </div>
        </div>
    </div>
</div>
</div>
</section>
<script>
    const apiBaseUrl = "/api/user";

    // Show modal with comic details
    async function showComicDetails(comicId)
    {
        try {
            const response = await fetch(`${apiBaseUrl}/comic/${comicId}`);
            const result = await response.json();
            const comic = result.comic;

            console.log("Comic ID sent to API:", comicId);
            console.log("Response status:", response.status);
            console.log("Response body:", result);
            console.log("Comic object:", comic);

            if (response.ok && comic) {
                let content = "";

                // Title + Thumbnail side by side
                content += `
                    <div class="col-3">
                        <img src="${comic.thumbnailURL}.jpg" alt="${comic.title}" class="me-3 rounded" style="width: 100%; height: auto;" />
                       
                    </div>
                `;

                content += `
                <div class="col-7">
                    <h5 class="mb-0">${comic.title}</h5>
                    <ul class="list-group">
                `;

                // Loop through all key-value pairs
                Object.entries(comic).forEach(([key, value]) => {
                    if (["title", "coverImageUrl", "thumbnailURL"].includes(key)) return;

                    let displayValue;

                    if (Array.isArray(value)) {
                        displayValue = value.length > 0 ? JSON.stringify(value, null, 2) : "(empty array)";
                    } else if (value === null || value === "") {
                        displayValue = "(none)";
                    } else if (typeof value === "string" && value.startsWith("http")) {
                        displayValue = `<a href="${value}" target="_blank">${value}</a>`;
                    } else {
                        displayValue = value;
                    }

                    content += `
                        <li class="list-group-item bg-dark bg-opacity-75 text-white">
                            <strong>${key}:</strong> ${displayValue}
                        </li>
                       
                    `;
                });

                content += `</ul></div>`;

                // Show in modal
                $("#comicModalBody").html(content);
                const modal = new bootstrap.Modal(document.getElementById('comicModal'));
                modal.show();
            } else {
                alert(`Error: ${result.message || "No comic data found."}`);
            }
        } catch (err) {
            console.error("Error loading comic:", err);
            alert("Failed to load comic details.");
        }
    }


    async function addToCart(comicId, quantity) {
        try {
            const response = await fetch(`${apiBaseUrl}/shopping-cart/add?comicId=${comicId}&quantity=${quantity}`, {
                method: "POST",
                headers: { "Content-Type": "application/json" }
            });

            const result = await response.json();
            alert(response.ok ? result.message : `Error: ${result.message}`);
        } catch (err) {
            console.error(err);
            alert("Failed to add comic to cart.");
        }
    }

    $("#searchComicsBtn").on("click", async function () {
        const title = $("#searchTitle").val();
        const response = await fetch(`${apiBaseUrl}/comics/search?title=${title}`);
        const results = await response.json();
        const $results = $("#searchResults").empty();

        if (response.ok) {
            results.forEach(comic => {
                const card = $(`
                    <div class="col-md-3 mb-4 gap-3">
                        <div class="card bg-dark h-100 p-2">
                            <img src="${comic.coverImageUrl}.jpg" class="card-img-top" style="cursor:pointer;" alt="${comic.title}">
                            <div class="card-body">
                                <h5 class="card-title">${comic.title}</h5>
                                <p class="card-text">Price: $${comic.price}</p>
                                <input type="number" id="quantity-${comic.comicID}" value="1" min="1" class="form-control mb-2">
                                <button data-comic-id="${comic.comicID}">Add to Cart<i class="fa fa-plus p-1" aria-hidden="true"></i></button>
                            </div>
                        </div>
                    </div>
                `);
                card.find("img").on("click", () => showComicDetails(comic.id));
                card.find(".add-to-cart-btn").on("click", async function () {
                    const comicId = $(this).data("comic-id");
                    const quantity = $(`#quantity-${comicId}`).val();
                    await addToCart(comicId, quantity);
                });
                $results.append(card);
            });
        } else {
            $results.html(`<div class="alert alert-warning">${results.message}</div>`);
        }
    });

    $("#viewCartBtn").on("click", async function () {
        const response = await fetch(`${apiBaseUrl}/shopping-cart`);
        const cartItems = await response.json();
        const $cart = $("#cartItems").empty();

        if (cartItems.length > 0) {
            cartItems.forEach(i => {
                $cart.append(`<p>${i.comicTitle} - Quantity: ${i.quantity}</p>`);
            });
        } else {
            $cart.html("<p>Your cart is empty.</p>");
        }
    });

    $("#checkoutBtn").on("click", async function () {
        const response = await fetch(`${apiBaseUrl}/purchase`, { method: "POST" });
        const result = await response.json();
        alert(result.message);
    });
</script>
